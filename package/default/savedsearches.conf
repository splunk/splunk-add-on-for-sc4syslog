##
## SPDX-FileCopyrightText: 2020 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-1-2020
##
##

[ITSI Import Objects - splunk-add-on-for-sc4syslog-Hosts_Search]
action.itsi_import_objects = 1
action.itsi_import_objects.param.backfill_enabled = 0
action.itsi_import_objects.param.entity_identifier_fields = dest,host,src,dvc
action.itsi_import_objects.param.entity_informational_fields = splunk_vendor_product
action.itsi_import_objects.param.entity_merge_field = itsi_entity
action.itsi_import_objects.param.entity_title_field = itsi_entity
action.itsi_import_objects.param.entity_type_field = itsi_entity_type
action.itsi_import_objects.param.service_enabled = 1
action.itsi_import_objects.param.service_team = default_itsi_security_group
action.itsi_import_objects.param.service_templates_config = {}
action.itsi_import_objects.param.update_type = upsert
alert.track = 1
cron_schedule = */15 * * * *
dispatch.earliest_time = -15m@m
display.general.type = statistics
display.page.search.tab = statistics
enableSched = 1
request.ui_dispatch_view = search
schedule_window = auto
allow_skew = 100%
search = | tstats values(sc4s_vendor_product) as "splunk_vendor_product" values(sourcetype) as sourcetype where index=* by host,sc4s_fromhostip\
| regex host!="\d+\.\d+\.\d+\.\d+" \
| lookup itsi_entities identifier.values as sc4s_fromhostip OUTPUT informational.fields informational.values\
| eval agg=ifnull(mvindex('informational.values',mvfind('informational.fields',"syslog_aggregation"),mvfind('informational.fields',"syslog_aggregation")),"false")\
| eval src=if(agg=="true",lower(host),mvappend(host,sc4s_fromhostip) ) \
| eval dest=if(agg=="true",lower(host),mvappend(host,sc4s_fromhostip) ) \
| eval dvc=if(agg=="true",lower(host),mvappend(host,sc4s_fromhostip) ) \
| eval itsi_entity=lower(host) \
| eval itsi_entity_type="splunk:agent:sc4syslog" \
| fields - entity_type_ids et_by_ip sc4s_fromhostip agg informational.fields informational.values
disabled = 0